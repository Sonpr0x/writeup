# Script: ports-check.py
# Description: Check ports
# Command: python script.py ip-host [default=allports|port,.etc|port-port]





import sys
import socket
import time

# handle ports string
def mode_handler():
    if len(sys.argv)==3:
        if ('-' in sys.argv[2]):
            temp = sys.argv[2].split('-')
            return range(int(temp[0]), int(temp[1])+1), sys.argv[2]
        else:
            temp = sys.argv[2].split(',')
            return list(map(int, temp)), sys.argv[2]
    else:
        return range(1, 65535), "All ports"
        
# check port
def probe_port(ip, port, result = 1): 
  try: 
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
    sock.settimeout(0.5) 
    r = sock.connect_ex((ip, port))   
    if r == 0: 
      result = r 
    sock.close() 
  except Exception as e: 
    pass 
  return result

# Main

try:
    sys.argv[1]
except IndexError:
    print("\n# Command: python script.py ip-host [default=allports|port,.etc|port-port]")
    print("# eg: python script.py ip-host 1-100")
    print("# eg: python script.py ip-host 21,22,80")
    sys.exit()

ip = sys.argv[1] 
open_ports =[]  
ports, mode = mode_handler()

print("\n# Start %s at " %(sys.argv[0]) + time.strftime("%H:%M:%S %m.%d.%Y", time.localtime()))
print("# Host:", sys.argv[1], "| Ports:", mode)

for port in ports: 
    sys.stdout.flush() 
    response = probe_port(ip, port) 
    if response == 0: 
        open_ports.append(port) 

if open_ports: 
    print ("Open Ports: ", end='') 
    print (sorted(open_ports))
else: 
    print ("No one let u in haha :)")  

print("# Script done at " + time.strftime("%H:%M:%S %m.%d.%Y", time.localtime()) + "\n")

